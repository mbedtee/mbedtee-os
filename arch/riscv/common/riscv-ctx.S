/* SPDX-License-Identifier: Apache-2.0 */
/*
 * Copyright (c) 2019 KapaXL (kapa.xl@outlook.com)
 * save/restore the RISCV32/RISCV64 exception ctx
 */

#include <riscv-asm.h>

/* ra/a0 shall be saved outside, before call this function */
FUNC_START save_thread_ctx
	# struct thread_ctx

	STR		sp, THREAD_CTX_SP(a0)
	STR		gp, THREAD_CTX_GP(a0)
	STR		tp, THREAD_CTX_TP(a0)

	STR		t0, THREAD_CTX_T0(a0)
	STR		t1, THREAD_CTX_T1(a0)
	STR		t2, THREAD_CTX_T2(a0)
	STR		t3, THREAD_CTX_T3(a0)
	STR		t4, THREAD_CTX_T4(a0)
	STR		t5, THREAD_CTX_T5(a0)
	STR		t6, THREAD_CTX_T6(a0)

	STR		a1, THREAD_CTX_A1(a0)
	STR		a2, THREAD_CTX_A2(a0)
	STR		a3, THREAD_CTX_A3(a0)
	STR		a4, THREAD_CTX_A4(a0)
	STR		a5, THREAD_CTX_A5(a0)
	STR		a6, THREAD_CTX_A6(a0)
	STR		a7, THREAD_CTX_A7(a0)

	csrr	t3, CSR_STATUS
	csrr	t4, CSR_CAUSE
	csrr	t5, CSR_EPC

#if defined(CONFIG_MMU)
	csrr	t6, satp
	STR		t6, THREAD_CTX_SATP(a0)
#endif

	STR		s0, THREAD_CTX_S0(a0)
	STR		s1, THREAD_CTX_S1(a0)
	STR		s2, THREAD_CTX_S2(a0)
	STR		s3, THREAD_CTX_S3(a0)
	STR		s4, THREAD_CTX_S4(a0)
	STR		s5, THREAD_CTX_S5(a0)
	STR		s6, THREAD_CTX_S6(a0)
	STR		s7, THREAD_CTX_S7(a0)
	STR		s8, THREAD_CTX_S8(a0)
	STR		s9, THREAD_CTX_S9(a0)
	STR		s10, THREAD_CTX_S10(a0)
	STR		s11, THREAD_CTX_S11(a0)

	STR		t3, THREAD_CTX_STAT(a0)
	STR		t4, THREAD_CTX_CAUSE(a0)
	STR		t5, THREAD_CTX_PC(a0)

	mv sp, a0
	ret
FUNC_END save_thread_ctx

/*
 * ra / a0 are restored outside this func
 */
FUNC_START restore_thread_ctx
	# struct thread_ctx

	LDR		a1, THREAD_CTX_A1(a0)
	LDR		a2, THREAD_CTX_A2(a0)
	LDR		a3, THREAD_CTX_A3(a0)
	LDR		a4, THREAD_CTX_A4(a0)
	LDR		a5, THREAD_CTX_A5(a0)
	LDR		a6, THREAD_CTX_A6(a0)
	LDR		a7, THREAD_CTX_A7(a0)

	LDR		sp, THREAD_CTX_SP(a0)
	LDR		gp, THREAD_CTX_GP(a0)
	LDR		tp, THREAD_CTX_TP(a0)

	LDR		s0, THREAD_CTX_S0(a0)
	LDR		s1, THREAD_CTX_S1(a0)
	LDR		s2, THREAD_CTX_S2(a0)
	LDR		s3, THREAD_CTX_S3(a0)
	LDR		s4, THREAD_CTX_S4(a0)
	LDR		s5, THREAD_CTX_S5(a0)
	LDR		s6, THREAD_CTX_S6(a0)
	LDR		s7, THREAD_CTX_S7(a0)
	LDR		s8, THREAD_CTX_S8(a0)
	LDR		s9, THREAD_CTX_S9(a0)
	LDR		s10, THREAD_CTX_S10(a0)
	LDR		s11, THREAD_CTX_S11(a0)

	LDR		t3, THREAD_CTX_STAT(a0)
	LDR		t4, THREAD_CTX_CAUSE(a0)
	LDR		t5, THREAD_CTX_PC(a0)

	csrw	CSR_STATUS, t3
	csrw	CSR_CAUSE, t4
	csrw	CSR_EPC, t5

#if defined(CONFIG_MMU)
	LDR 	t6, THREAD_CTX_SATP(a0)
	csrw	satp, t6
#endif

	LDR		t0, THREAD_CTX_T0(a0)
	LDR		t1, THREAD_CTX_T1(a0)
	LDR		t2, THREAD_CTX_T2(a0)
	LDR		t3, THREAD_CTX_T3(a0)
	LDR		t4, THREAD_CTX_T4(a0)
	LDR		t5, THREAD_CTX_T5(a0)
	LDR		t6, THREAD_CTX_T6(a0)

	ret
FUNC_END restore_thread_ctx

#if defined(__riscv_flen)
FUNC_START save_fpu_ctx
	li a1, SR_FS
	csrs CSR_STATUS, a1

	frcsr a2

	FSTR f0,  THREAD_FPU_CTX_F0(a0)
	FSTR f1,  THREAD_FPU_CTX_F1(a0)
	FSTR f2,  THREAD_FPU_CTX_F2(a0)
	FSTR f3,  THREAD_FPU_CTX_F3(a0)
	FSTR f4,  THREAD_FPU_CTX_F4(a0)
	FSTR f5,  THREAD_FPU_CTX_F5(a0)
	FSTR f6,  THREAD_FPU_CTX_F6(a0)
	FSTR f7,  THREAD_FPU_CTX_F7(a0)
	FSTR f8,  THREAD_FPU_CTX_F8(a0)
	FSTR f9,  THREAD_FPU_CTX_F9(a0)
	FSTR f10, THREAD_FPU_CTX_F10(a0)
	FSTR f11, THREAD_FPU_CTX_F11(a0)
	FSTR f12, THREAD_FPU_CTX_F12(a0)
	FSTR f13, THREAD_FPU_CTX_F13(a0)
	FSTR f14, THREAD_FPU_CTX_F14(a0)
	FSTR f15, THREAD_FPU_CTX_F15(a0)
	FSTR f16, THREAD_FPU_CTX_F16(a0)
	FSTR f17, THREAD_FPU_CTX_F17(a0)
	FSTR f18, THREAD_FPU_CTX_F18(a0)
	FSTR f19, THREAD_FPU_CTX_F19(a0)
	FSTR f20, THREAD_FPU_CTX_F20(a0)
	FSTR f21, THREAD_FPU_CTX_F21(a0)
	FSTR f22, THREAD_FPU_CTX_F22(a0)
	FSTR f23, THREAD_FPU_CTX_F23(a0)
	FSTR f24, THREAD_FPU_CTX_F24(a0)
	FSTR f25, THREAD_FPU_CTX_F25(a0)
	FSTR f26, THREAD_FPU_CTX_F26(a0)
	FSTR f27, THREAD_FPU_CTX_F27(a0)
	FSTR f28, THREAD_FPU_CTX_F28(a0)
	FSTR f29, THREAD_FPU_CTX_F29(a0)
	FSTR f30, THREAD_FPU_CTX_F30(a0)
	FSTR f31, THREAD_FPU_CTX_F31(a0)

	sw a2, THREAD_FPU_CTX_FCSR(a0)

	csrc CSR_STATUS, a1
	ret
FUNC_END save_fpu_ctx


FUNC_START restore_fpu_ctx
	li a1, SR_FS
	csrs CSR_STATUS, a1

	lw a2, THREAD_FPU_CTX_FCSR(a0)

	FLDR f0,  THREAD_FPU_CTX_F0(a0)
	FLDR f1,  THREAD_FPU_CTX_F1(a0)
	FLDR f2,  THREAD_FPU_CTX_F2(a0)
	FLDR f3,  THREAD_FPU_CTX_F3(a0)
	FLDR f4,  THREAD_FPU_CTX_F4(a0)
	FLDR f5,  THREAD_FPU_CTX_F5(a0)
	FLDR f6,  THREAD_FPU_CTX_F6(a0)
	FLDR f7,  THREAD_FPU_CTX_F7(a0)
	FLDR f8,  THREAD_FPU_CTX_F8(a0)
	FLDR f9,  THREAD_FPU_CTX_F9(a0)
	FLDR f10, THREAD_FPU_CTX_F10(a0)
	FLDR f11, THREAD_FPU_CTX_F11(a0)
	FLDR f12, THREAD_FPU_CTX_F12(a0)
	FLDR f13, THREAD_FPU_CTX_F13(a0)
	FLDR f14, THREAD_FPU_CTX_F14(a0)
	FLDR f15, THREAD_FPU_CTX_F15(a0)
	FLDR f16, THREAD_FPU_CTX_F16(a0)
	FLDR f17, THREAD_FPU_CTX_F17(a0)
	FLDR f18, THREAD_FPU_CTX_F18(a0)
	FLDR f19, THREAD_FPU_CTX_F19(a0)
	FLDR f20, THREAD_FPU_CTX_F20(a0)
	FLDR f21, THREAD_FPU_CTX_F21(a0)
	FLDR f22, THREAD_FPU_CTX_F22(a0)
	FLDR f23, THREAD_FPU_CTX_F23(a0)
	FLDR f24, THREAD_FPU_CTX_F24(a0)
	FLDR f25, THREAD_FPU_CTX_F25(a0)
	FLDR f26, THREAD_FPU_CTX_F26(a0)
	FLDR f27, THREAD_FPU_CTX_F27(a0)
	FLDR f28, THREAD_FPU_CTX_F28(a0)
	FLDR f29, THREAD_FPU_CTX_F29(a0)
	FLDR f30, THREAD_FPU_CTX_F30(a0)
	FLDR f31, THREAD_FPU_CTX_F31(a0)

	fscsr a2

	csrc CSR_STATUS, a1
	ret
FUNC_END restore_fpu_ctx
#endif
